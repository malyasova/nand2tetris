function Array2d.new 4
push constant 3
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push argument 0
call Array.new 1
pop this 2
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push argument 0
lt
not
if-goto WHILE_END0
push local 0
push this 2
add
push argument 1
call Array.new 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push this 2
add
pop pointer 1
push that 0
pop local 2
push constant 0
pop local 1
label WHILE_EXP1
push local 1
push argument 1
lt
not
if-goto WHILE_END1
push local 1
push local 2
add
push local 0
push local 1
call Cell.new 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push pointer 0
return
function Array2d.dispose 4
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 0
lt
not
if-goto WHILE_END0
push local 0
push this 2
add
pop pointer 1
push that 0
pop local 2
push constant 0
pop local 1
label WHILE_EXP1
push local 1
push this 1
lt
not
if-goto WHILE_END1
push local 1
push local 2
add
pop pointer 1
push that 0
pop local 3
push local 3
call Cell.dispose 1
pop temp 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push local 0
push constant 1
add
pop local 0
push local 2
call Memory.deAlloc 1
pop temp 0
goto WHILE_EXP0
label WHILE_END0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Array2d.at 1
push argument 0
pop pointer 0
push argument 1
push this 2
add
pop pointer 1
push that 0
pop local 0
push argument 2
push local 0
add
pop pointer 1
push that 0
return
